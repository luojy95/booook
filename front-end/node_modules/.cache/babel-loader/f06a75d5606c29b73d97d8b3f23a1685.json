{"ast":null,"code":"\"use strict\";\n/**\n * Returns an ensureOption function that relies on the provided `defaults` argument\n * for default values.\n * @private\n * @param {object} defaults\n * @return {function(*, *, *=): *}\n */\n\nfunction defaults(defaults) {\n  return function ensureOption(options, name, defaultValue) {\n    var value = options[name] || defaults[name] || defaultValue;\n\n    if (value === undefined) {\n      throw \"Must supply \".concat(name);\n    }\n\n    return value;\n  };\n}\n/**\n * Get the option `name` from options, the global config, or the default value.\n * If the value is not defined and no default value was provided,\n * the method will throw an error.\n * @private\n * @param {object} options\n * @param {string} name\n * @param {*} [defaultValue]\n * @return {*} the value associated with the provided `name` or the default.\n *\n */\n\n\nmodule.exports = defaults({});\nmodule.exports.defaults = defaults;","map":null,"metadata":{},"sourceType":"script"}