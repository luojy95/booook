{"ast":null,"code":"// import React from 'react';\n// import { withRouter } from 'react-router-dom';\n// import { compose } from 'recompose';\n// import AuthUserContext from './context';\n// import { withFirebase } from '../Firebase';\n// import * as ROUTES from '../../constants/routes';\n// const withAuthorization = condition => Component => {\n//   class WithAuthorization extends React.Component {\n//     componentDidMount() {\n//       this.listener = this.props.firebase.onAuthUserListener(\n//         authUser => {\n//           if (!condition(authUser)) {\n//             this.props.history.push(ROUTES.SIGN_IN);\n//           }\n//         },\n//         () => this.props.history.push(ROUTES.SIGN_IN),\n//       );\n//     }\n//     componentWillUnmount() {\n//       this.listener();\n//     }\n//     render() {\n//       return (\n//         <AuthUserContext.Consumer>\n//           {authUser =>\n//             condition(authUser) ? <Component {...this.props} /> : null\n//           }\n//         </AuthUserContext.Consumer>\n//       );\n//     }\n//   }\n//   return compose(\n//     withRouter,\n//     withFirebase,\n//   )(WithAuthorization);\n// };\n// export default withAuthorization;","map":{"version":3,"sources":["/home/qingyu/Desktop/react-firebase-demo/src/components/Session/withAuthorization.js"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React from 'react';\n// import { withRouter } from 'react-router-dom';\n// import { compose } from 'recompose';\n\n// import AuthUserContext from './context';\n// import { withFirebase } from '../Firebase';\n// import * as ROUTES from '../../constants/routes';\n\n// const withAuthorization = condition => Component => {\n//   class WithAuthorization extends React.Component {\n//     componentDidMount() {\n//       this.listener = this.props.firebase.onAuthUserListener(\n//         authUser => {\n//           if (!condition(authUser)) {\n//             this.props.history.push(ROUTES.SIGN_IN);\n//           }\n//         },\n//         () => this.props.history.push(ROUTES.SIGN_IN),\n//       );\n//     }\n\n//     componentWillUnmount() {\n//       this.listener();\n//     }\n\n//     render() {\n//       return (\n//         <AuthUserContext.Consumer>\n//           {authUser =>\n//             condition(authUser) ? <Component {...this.props} /> : null\n//           }\n//         </AuthUserContext.Consumer>\n//       );\n//     }\n//   }\n\n//   return compose(\n//     withRouter,\n//     withFirebase,\n//   )(WithAuthorization);\n// };\n\n// export default withAuthorization;\n"]},"metadata":{},"sourceType":"module"}