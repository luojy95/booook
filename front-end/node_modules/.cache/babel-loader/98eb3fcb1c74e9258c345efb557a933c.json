{"ast":null,"code":"var _classCallCheck = require(\"/home/zecheng3/workspace/cs498rk/rk_project/front-end/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/zecheng3/workspace/cs498rk/rk_project/front-end/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/zecheng3/workspace/cs498rk/rk_project/front-end/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/zecheng3/workspace/cs498rk/rk_project/front-end/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/zecheng3/workspace/cs498rk/rk_project/front-end/node_modules/@babel/runtime/helpers/inherits\");\n\nvar Transform = require(\"stream\").Transform;\n\nvar UploadStream =\n/*#__PURE__*/\nfunction (_Transform) {\n  \"use strict\";\n\n  _inherits(UploadStream, _Transform);\n\n  function UploadStream(options) {\n    var _this;\n\n    _classCallCheck(this, UploadStream);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UploadStream).call(this));\n    _this.boundary = options.boundary;\n    return _this;\n  }\n\n  _createClass(UploadStream, [{\n    key: \"_transform\",\n    value: function _transform(data, encoding, next) {\n      var buffer = Buffer.isBuffer(data) ? data : new Buffer(data, encoding);\n      this.push(buffer);\n      next();\n    }\n  }, {\n    key: \"_flush\",\n    value: function _flush(next) {\n      this.push(new Buffer(\"\\r\\n\", 'ascii'));\n      this.push(new Buffer(\"--\" + this.boundary + \"--\", 'ascii'));\n      return next();\n    }\n  }]);\n\n  return UploadStream;\n}(Transform);\n\nmodule.exports = UploadStream;","map":null,"metadata":{},"sourceType":"script"}