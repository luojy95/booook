{"ast":null,"code":"import _defineProperty from \"/Spring_2019/cs498rk/project/rk_project/front-end/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Spring_2019/cs498rk/project/rk_project/front-end/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Spring_2019/cs498rk/project/rk_project/front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Spring_2019/cs498rk/project/rk_project/front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Spring_2019/cs498rk/project/rk_project/front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Spring_2019/cs498rk/project/rk_project/front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Spring_2019/cs498rk/project/rk_project/front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Spring_2019/cs498rk/project/rk_project/front-end/src/components/SignIn/index.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { Form, Button, Checkbox, Container } from 'semantic-ui-react';\nimport './signin.scss';\nimport axios from 'axios';\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\nvar s = {\n  marginTop: \"12px\"\n};\n\nvar SignInPage = function SignInPage() {\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(SignInForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(SignInGoogle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(PasswordForgetLink, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(SignUpLink, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }));\n};\n\nvar INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null\n};\nvar ERROR_CODE_ACCOUNT_EXISTS = 'auth/account-exists-with-different-credential';\nvar ERROR_MSG_ACCOUNT_EXISTS = \"\\n  An account with an E-Mail address to\\n  this social account already exists. Try to login from\\n  this account instead and associate your social accounts on\\n  your personal account page.\\n\";\n\nvar SignInFormBase =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SignInFormBase, _Component);\n\n  function SignInFormBase(props) {\n    var _this;\n\n    _classCallCheck(this, SignInFormBase);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SignInFormBase).call(this, props));\n\n    _this.onSubmit = function (event) {\n      var _this$state = _this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n      axios.get('http://localhost:8000/api/users/email/' + email).then(function (res) {\n        window.sessionStorage.setItem('userId', res.data.data._id);\n        console.log(res.data.data._id);\n      });\n\n      _this.props.firebase.doSignInWithEmailAndPassword(email, password).then(function () {\n        _this.setState(_objectSpread({}, INITIAL_STATE));\n\n        _this.props.history.push(\"/\");\n      }).catch(function (error) {\n        _this.setState({\n          error: error\n        });\n      });\n\n      event.preventDefault();\n    };\n\n    _this.onChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.state = _objectSpread({}, INITIAL_STATE);\n    return _this;\n  }\n\n  _createClass(SignInFormBase, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          error = _this$state2.error;\n      var isInvalid = password === '' || email === '';\n      return React.createElement(Form, {\n        onSubmit: this.onSubmit,\n        class: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Sign In\"), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"email\",\n        value: email,\n        onChange: this.onChange,\n        type: \"text\",\n        placeholder: \"Email Address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"password\",\n        value: password,\n        onChange: this.onChange,\n        type: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Button, {\n        disabled: isInvalid,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Sign In\")));\n    }\n  }]);\n\n  return SignInFormBase;\n}(Component);\n\nvar SignInGoogleBase =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(SignInGoogleBase, _Component2);\n\n  function SignInGoogleBase(props) {\n    var _this2;\n\n    _classCallCheck(this, SignInGoogleBase);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(SignInGoogleBase).call(this, props));\n\n    _this2.onSubmit = function (event) {\n      _this2.props.firebase.doSignInWithGoogle().then(function (socialAuthUser) {\n        // Create a user in your Firebase Realtime Database too\n        return _this2.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.user.displayName,\n          email: socialAuthUser.user.email,\n          roles: {}\n        });\n      }).then(function () {\n        _this2.setState({\n          error: null\n        });\n\n        _this2.props.history.push(ROUTES.HOME);\n      }).catch(function (error) {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        _this2.setState({\n          error: error\n        });\n      });\n\n      event.preventDefault();\n    };\n\n    _this2.state = {\n      error: null\n    };\n    return _this2;\n  }\n\n  _createClass(SignInGoogleBase, [{\n    key: \"render\",\n    value: function render() {\n      var error = this.state.error;\n      return React.createElement(Form, {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        style: s,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Sign In with Google\")));\n    }\n  }]);\n\n  return SignInGoogleBase;\n}(Component);\n\nvar SignInForm = compose(withRouter, withFirebase)(SignInFormBase);\nvar SignInGoogle = compose(withRouter, withFirebase)(SignInGoogleBase);\nexport default SignInPage;\nexport { SignInForm, SignInGoogle };","map":{"version":3,"sources":["/Spring_2019/cs498rk/project/rk_project/front-end/src/components/SignIn/index.js"],"names":["React","Component","withRouter","compose","Form","Button","Checkbox","Container","axios","SignUpLink","PasswordForgetLink","withFirebase","ROUTES","s","marginTop","SignInPage","INITIAL_STATE","email","password","error","ERROR_CODE_ACCOUNT_EXISTS","ERROR_MSG_ACCOUNT_EXISTS","SignInFormBase","props","onSubmit","event","state","get","then","res","window","sessionStorage","setItem","data","_id","console","log","firebase","doSignInWithEmailAndPassword","setState","history","push","catch","preventDefault","onChange","target","name","value","isInvalid","SignInGoogleBase","doSignInWithGoogle","socialAuthUser","user","uid","set","username","displayName","roles","HOME","code","message","SignInForm","SignInGoogle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { Form, Button, Checkbox, Container } from 'semantic-ui-react';\nimport './signin.scss';\nimport axios from 'axios'\n\nimport { SignUpLink } from '../SignUp';\nimport { PasswordForgetLink } from '../PasswordForget';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nvar s = {\n  marginTop:\"12px\",\n}\n\nconst SignInPage = () => (\n  <Container>\n    {/* <Form>\n    <Form.Field> */}\n      <SignInForm/>\n      <SignInGoogle/>\n      <PasswordForgetLink/>\n      <SignUpLink/>\n  </Container>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n};\n\nconst ERROR_CODE_ACCOUNT_EXISTS =\n  'auth/account-exists-with-different-credential';\n\nconst ERROR_MSG_ACCOUNT_EXISTS = `\n  An account with an E-Mail address to\n  this social account already exists. Try to login from\n  this account instead and associate your social accounts on\n  your personal account page.\n`;\n\nclass SignInFormBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n\n    axios.get('http://localhost:8000/api/users/email/' + email).then((res) => {\n      window.sessionStorage.setItem('userId', res.data.data._id)\n      console.log(res.data.data._id)\n    })\n\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n        this.props.history.push(\"/\");\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === '' || email === '';\n\n    return (\n      <Form onSubmit={this.onSubmit} class=\"form\">\n        <h1>Sign In</h1>\n        <Form.Field>\n        <input\n          name=\"email\"\n          value={email}\n          onChange={this.onChange}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        </Form.Field>\n        <Form.Field>\n        <input\n          name=\"password\"\n          value={password}\n          onChange={this.onChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n        </Form.Field>\n        <Form.Field>\n        <Button disabled={isInvalid} type=\"submit\">\n          Sign In\n        </Button>\n        </Form.Field>\n      </Form>\n    );\n  }\n}\n\nclass SignInGoogleBase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { error: null };\n  }\n\n  onSubmit = event => {\n    this.props.firebase\n      .doSignInWithGoogle()\n      .then(socialAuthUser => {\n        // Create a user in your Firebase Realtime Database too\n        return this.props.firebase.user(socialAuthUser.user.uid).set({\n          username: socialAuthUser.user.displayName,\n          email: socialAuthUser.user.email,\n          roles: {},\n        });\n      })\n      .then(() => {\n        this.setState({ error: null });\n        this.props.history.push(ROUTES.HOME);\n      })\n      .catch(error => {\n        if (error.code === ERROR_CODE_ACCOUNT_EXISTS) {\n          error.message = ERROR_MSG_ACCOUNT_EXISTS;\n        }\n\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  render() {\n    const { error } = this.state;\n\n    return (\n      <Form onSubmit={this.onSubmit}>\n        <Form.Field>\n        <Button type=\"submit\" style={s}>Sign In with Google</Button>\n        </Form.Field>\n      </Form>\n    );\n  }\n}\n\nconst SignInForm = compose(\n  withRouter,\n  withFirebase,\n)(SignInFormBase);\n\nconst SignInGoogle = compose(\n  withRouter,\n  withFirebase,\n)(SignInGoogleBase);\n\nexport default SignInPage;\n\nexport { SignInForm, SignInGoogle };\n"]},"metadata":{},"sourceType":"module"}